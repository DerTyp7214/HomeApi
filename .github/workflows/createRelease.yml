# github workflow to build project and create new release

name: Build and Release

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'latest'

permissions: write-all

concurrency:
  group: 'deploy'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.author.name != 'dependabot[bot]' && github.event_name != 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Set up pnpm
        run: |
          npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install
          pnpm install:web

      - name: Deploy Web
        run: |
          pnpm deploy:web
          tar -czvf api.tar.gz api

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        run: |
          cd api
          docker build -t ghcr.io/dertyp7214/homeapi:${{ github.event.inputs.version }} .
          docker push ghcr.io/dertyp7214/homeapi:${{ github.event.inputs.version }}

      - name: Build Docker image
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.version == ''
        run: |
          cd api
          docker build -t ghcr.io/dertyp7214/homeapi:dev .
          docker push ghcr.io/dertyp7214/homeapi:dev

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api

      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Create Release Text
        id: release-text
        run: |
          body=$(git log $(git describe --tags --always --abbrev=0)..HEAD --pretty=format:'- [`%h`](${{ github.server_url }}/${{ github.repository }}/commit/%H): %s')
          echo "body=$body" >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            api.tar.gz
          tag_name: ${{ steps.package-version.outputs.current-version }}
          body: ${{ steps.release-text.outputs.body }}
          draft: false
          prerelease: false
