# github workflow to build project and create new release

name: Build and Release

on:
  push:
    branches: ['master']
    paths-ignore:
      - '.github/**'
      - '**/README.md'
      - '**/.gitignore'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'latest'
      isRelease:
        description: 'Is this a release?'
        required: false
        type: boolean
        default: false

permissions: write-all

concurrency:
  group: 'deploy'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        api:
          [
            {
              path: HomeApiPython,
              env: python,
              cache-paths: '~/.cache/pip',
              hash-files: '**/requirements.txt',
              filesToTar: 'HomeApiPython',
            },
            {
              path: HomeApiRust,
              env: rust,
              cache-paths: "./HomeApiRust/target\n~/.cargo",
              hash-files: '**/Cargo.lock',
              filesToTar: 'HomeApiRust/migrations HomeApiRust/target/release/ HomeApiRust/diesel.toml',
            },
          ]
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.author.name != 'dependabot[bot]' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.api.cache-paths }}
            ./node_modules
            ~/.pnpm-store
            ./HomeApiWeb/node_modules
            ./HomeApiWeb/.svelte-kit
          key: ${{ runner.os }}-${{ matrix.api.path }}-${{ hashFiles(matrix.api.hash-files, '**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.api.path }}-

      - name: Set up Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Set up pnpm
        run: |
          npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install
          pnpm install:web

      - name: Deploy Web
        run: |
          pnpm deploy:web --path ${{ matrix.api.path }}
          tar -czvf api.tar.gz ${{ matrix.api.filesToTar }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        run: |
          cd ${{ matrix.api.path }}
          if [ -f pre_build.sh ]; then
            chmod +x pre_build.sh  
            ./pre_build.sh
          fi
          docker build -t ghcr.io/dertyp7214/homeapi:${{ github.event.inputs.version }}-${{ matrix.api.env }} .
          docker push ghcr.io/dertyp7214/homeapi:${{ github.event.inputs.version }}-${{ matrix.api.env }}

      - name: Build Docker image
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.version == ''
        run: |
          cd ${{ matrix.api.path }}
          if [ -f pre_build.sh ]; then
            chmod +x pre_build.sh  
            ./pre_build.sh
          fi
          docker build -t ghcr.io/dertyp7214/homeapi:dev-${{ matrix.api.env }} .
          docker push ghcr.io/dertyp7214/homeapi:dev-${{ matrix.api.env }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: api-${{ matrix.api.env }}
          path: ${{ matrix.api.path }}

      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Create Release Text
        id: release-text
        run: |
          body="## Commits\n"
          body+=$(git log $(git describe --tags --always --abbrev=0)..HEAD --pretty=format:'\n- [`%h`](${{ github.server_url }}/${{ github.repository }}/commit/%H): %s (%an)')
          echo -e $body >> release.md

      - name: Create Release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            api.tar.gz
          tag_name: ${{ steps.package-version.outputs.current-version }}-${{ github.event.inputs.version }}-${{ matrix.api.env }}
          body_path: release.md
          draft: false
          prerelease: ${{ github.event.inputs.isRelease != 'true' }}

      - name: Create Release
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.version == ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            api.tar.gz
          tag_name: ${{ steps.package-version.outputs.current-version }}-${{ matrix.api.env }}
          body_path: release.md
          draft: false
          prerelease: ${{ github.event.inputs.isRelease != 'true' }}
